// Klib ABI Dump
// Targets: [linuxArm64, linuxX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.github.kingg22:deezer-client-kt>
open annotation class io.github.kingg22.deezer.client.utils/AfterInitialize : kotlin/Annotation { // io.github.kingg22.deezer.client.utils/AfterInitialize|null[0]
    constructor <init>() // io.github.kingg22.deezer.client.utils/AfterInitialize.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.deezer.client.utils/ExperimentalDeezerClient : kotlin/Annotation { // io.github.kingg22.deezer.client.utils/ExperimentalDeezerClient|null[0]
    constructor <init>() // io.github.kingg22.deezer.client.utils/ExperimentalDeezerClient.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.deezer.client.utils/InternalDeezerClient : kotlin/Annotation { // io.github.kingg22.deezer.client.utils/InternalDeezerClient|null[0]
    constructor <init>() // io.github.kingg22.deezer.client.utils/InternalDeezerClient.<init>|<init>(){}[0]
}

final enum class io.github.kingg22.deezer.client.api.objects/Explicit : kotlin/Enum<io.github.kingg22.deezer.client.api.objects/Explicit> { // io.github.kingg22.deezer.client.api.objects/Explicit|null[0]
    enum entry EDITED // io.github.kingg22.deezer.client.api.objects/Explicit.EDITED|null[0]
    enum entry EXPLICIT // io.github.kingg22.deezer.client.api.objects/Explicit.EXPLICIT|null[0]
    enum entry NOT_EXPLICIT // io.github.kingg22.deezer.client.api.objects/Explicit.NOT_EXPLICIT|null[0]
    enum entry NO_ADVICE_AVAILABLE // io.github.kingg22.deezer.client.api.objects/Explicit.NO_ADVICE_AVAILABLE|null[0]
    enum entry PARTIALLY_EXPLICIT // io.github.kingg22.deezer.client.api.objects/Explicit.PARTIALLY_EXPLICIT|null[0]
    enum entry PARTIALLY_NO_ADVICE_AVAILABLE // io.github.kingg22.deezer.client.api.objects/Explicit.PARTIALLY_NO_ADVICE_AVAILABLE|null[0]
    enum entry PARTIALLY_UNKNOWN // io.github.kingg22.deezer.client.api.objects/Explicit.PARTIALLY_UNKNOWN|null[0]
    enum entry UNKNOWN // io.github.kingg22.deezer.client.api.objects/Explicit.UNKNOWN|null[0]

    final val entries // io.github.kingg22.deezer.client.api.objects/Explicit.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.api.objects/Explicit> // io.github.kingg22.deezer.client.api.objects/Explicit.entries.<get-entries>|<get-entries>#static(){}[0]
    final val value // io.github.kingg22.deezer.client.api.objects/Explicit.value|{}value[0]
        final fun <get-value>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Explicit.value.<get-value>|<get-value>(){}[0]

    final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.api.objects/Explicit // io.github.kingg22.deezer.client.api.objects/Explicit.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<io.github.kingg22.deezer.client.api.objects/Explicit> // io.github.kingg22.deezer.client.api.objects/Explicit.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.api.objects/Explicit.Companion|null[0]
        final fun fromValue(kotlin/Int): io.github.kingg22.deezer.client.api.objects/Explicit? // io.github.kingg22.deezer.client.api.objects/Explicit.Companion.fromValue|fromValue(kotlin.Int){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Explicit> // io.github.kingg22.deezer.client.api.objects/Explicit.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.api.objects/Explicit.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class io.github.kingg22.deezer.client.api.objects/ImageSizes : kotlin/Enum<io.github.kingg22.deezer.client.api.objects/ImageSizes> { // io.github.kingg22.deezer.client.api.objects/ImageSizes|null[0]
    enum entry BIG // io.github.kingg22.deezer.client.api.objects/ImageSizes.BIG|null[0]
    enum entry MEDIUM // io.github.kingg22.deezer.client.api.objects/ImageSizes.MEDIUM|null[0]
    enum entry SMALL // io.github.kingg22.deezer.client.api.objects/ImageSizes.SMALL|null[0]
    enum entry XL // io.github.kingg22.deezer.client.api.objects/ImageSizes.XL|null[0]

    final val entries // io.github.kingg22.deezer.client.api.objects/ImageSizes.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.api.objects/ImageSizes> // io.github.kingg22.deezer.client.api.objects/ImageSizes.entries.<get-entries>|<get-entries>#static(){}[0]
    final val querySize // io.github.kingg22.deezer.client.api.objects/ImageSizes.querySize|{}querySize[0]
        final fun <get-querySize>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/ImageSizes.querySize.<get-querySize>|<get-querySize>(){}[0]

    final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.api.objects/ImageSizes // io.github.kingg22.deezer.client.api.objects/ImageSizes.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<io.github.kingg22.deezer.client.api.objects/ImageSizes> // io.github.kingg22.deezer.client.api.objects/ImageSizes.values|values#static(){}[0]
}

final enum class io.github.kingg22.deezer.client.api.objects/SearchOrder : kotlin/Enum<io.github.kingg22.deezer.client.api.objects/SearchOrder> { // io.github.kingg22.deezer.client.api.objects/SearchOrder|null[0]
    enum entry ALBUM_ASC // io.github.kingg22.deezer.client.api.objects/SearchOrder.ALBUM_ASC|null[0]
    enum entry ALBUM_DESC // io.github.kingg22.deezer.client.api.objects/SearchOrder.ALBUM_DESC|null[0]
    enum entry ARTIST_ASC // io.github.kingg22.deezer.client.api.objects/SearchOrder.ARTIST_ASC|null[0]
    enum entry ARTIST_DESC // io.github.kingg22.deezer.client.api.objects/SearchOrder.ARTIST_DESC|null[0]
    enum entry DURATION_ASC // io.github.kingg22.deezer.client.api.objects/SearchOrder.DURATION_ASC|null[0]
    enum entry DURATION_DESC // io.github.kingg22.deezer.client.api.objects/SearchOrder.DURATION_DESC|null[0]
    enum entry RANKING // io.github.kingg22.deezer.client.api.objects/SearchOrder.RANKING|null[0]
    enum entry RATING_ASC // io.github.kingg22.deezer.client.api.objects/SearchOrder.RATING_ASC|null[0]
    enum entry RATING_DESC // io.github.kingg22.deezer.client.api.objects/SearchOrder.RATING_DESC|null[0]
    enum entry TRACK_ASC // io.github.kingg22.deezer.client.api.objects/SearchOrder.TRACK_ASC|null[0]
    enum entry TRACK_DESC // io.github.kingg22.deezer.client.api.objects/SearchOrder.TRACK_DESC|null[0]

    final val entries // io.github.kingg22.deezer.client.api.objects/SearchOrder.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.api.objects/SearchOrder> // io.github.kingg22.deezer.client.api.objects/SearchOrder.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.api.objects/SearchOrder // io.github.kingg22.deezer.client.api.objects/SearchOrder.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<io.github.kingg22.deezer.client.api.objects/SearchOrder> // io.github.kingg22.deezer.client.api.objects/SearchOrder.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.api.objects/SearchOrder.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/SearchOrder> // io.github.kingg22.deezer.client.api.objects/SearchOrder.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.api.objects/SearchOrder.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

abstract interface io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Resource|null[0]
    abstract val id // io.github.kingg22.deezer.client.api.objects/Resource.id|{}id[0]
        abstract fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Resource.id.<get-id>|<get-id>(){}[0]
    abstract val type // io.github.kingg22.deezer.client.api.objects/Resource.type|{}type[0]
        abstract fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Resource.type.<get-type>|<get-type>(){}[0]

    abstract suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Resource // io.github.kingg22.deezer.client.api.objects/Resource.reload|reload(){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/AlbumRoutes { // io.github.kingg22.deezer.client.api.routes/AlbumRoutes|null[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Album // io.github.kingg22.deezer.client.api.routes/AlbumRoutes.getById|getById(kotlin.Long){}[0]
    abstract suspend fun getByUpc(kotlin/String): io.github.kingg22.deezer.client.api.objects/Album // io.github.kingg22.deezer.client.api.routes/AlbumRoutes.getByUpc|getByUpc(kotlin.String){}[0]
    abstract suspend fun getFans(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/User> // io.github.kingg22.deezer.client.api.routes/AlbumRoutes.getFans|getFans(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTracks(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/AlbumRoutes.getTracks|getTracks(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/ArtistRoutes { // io.github.kingg22.deezer.client.api.routes/ArtistRoutes|null[0]
    abstract suspend fun getAlbums(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getAlbums|getAlbums(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Artist // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getById|getById(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getFans(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/User> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getFans|getFans(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getPlaylists(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getPlaylists|getPlaylists(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getRadio(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getRadio|getRadio(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getRelated(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getRelated|getRelated(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTopTracks(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/ArtistRoutes.getTopTracks|getTopTracks(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/ChartRoutes { // io.github.kingg22.deezer.client.api.routes/ChartRoutes|null[0]
    abstract suspend fun getAlbums(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getAlbums|getAlbums(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getAll(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Chart // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getAll|getAll(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getArtists(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getArtists|getArtists(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Chart // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getById|getById(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getPlaylists(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getPlaylists|getPlaylists(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getPodcasts(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getPodcasts|getPodcasts(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTracks(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/ChartRoutes.getTracks|getTracks(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/EditorialRoutes { // io.github.kingg22.deezer.client.api.routes/EditorialRoutes|null[0]
    abstract suspend fun getAll(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Editorial> // io.github.kingg22.deezer.client.api.routes/EditorialRoutes.getAll|getAll(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Editorial // io.github.kingg22.deezer.client.api.routes/EditorialRoutes.getById|getById(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getCharts(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Chart // io.github.kingg22.deezer.client.api.routes/EditorialRoutes.getCharts|getCharts(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getDeezerSelection(kotlin/Long = ..., kotlinx.datetime/LocalDate? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.routes/EditorialRoutes.getDeezerSelection|getDeezerSelection(kotlin.Long;kotlinx.datetime.LocalDate?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getReleases(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.routes/EditorialRoutes.getReleases|getReleases(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/EpisodeRoutes { // io.github.kingg22.deezer.client.api.routes/EpisodeRoutes|null[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Episode // io.github.kingg22.deezer.client.api.routes/EpisodeRoutes.getById|getById(kotlin.Long){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/GenreRoutes { // io.github.kingg22.deezer.client.api.routes/GenreRoutes|null[0]
    abstract suspend fun getAll(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Genre> // io.github.kingg22.deezer.client.api.routes/GenreRoutes.getAll|getAll(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getArtists(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.routes/GenreRoutes.getArtists|getArtists(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Genre // io.github.kingg22.deezer.client.api.routes/GenreRoutes.getById|getById(kotlin.Long){}[0]
    abstract suspend fun getPodcasts(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.routes/GenreRoutes.getPodcasts|getPodcasts(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getRadios(kotlin/Long = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.routes/GenreRoutes.getRadios|getRadios(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/InfosRoute { // io.github.kingg22.deezer.client.api.routes/InfosRoute|null[0]
    abstract suspend fun getInfos(): io.github.kingg22.deezer.client.api.objects/Infos // io.github.kingg22.deezer.client.api.routes/InfosRoute.getInfos|getInfos(){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/OptionsRoute { // io.github.kingg22.deezer.client.api.routes/OptionsRoute|null[0]
    abstract suspend fun getOptions(): io.github.kingg22.deezer.client.api.objects/Options // io.github.kingg22.deezer.client.api.routes/OptionsRoute.getOptions|getOptions(){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/PlaylistRoutes { // io.github.kingg22.deezer.client.api.routes/PlaylistRoutes|null[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Playlist // io.github.kingg22.deezer.client.api.routes/PlaylistRoutes.getById|getById(kotlin.Long){}[0]
    abstract suspend fun getFans(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/User> // io.github.kingg22.deezer.client.api.routes/PlaylistRoutes.getFans|getFans(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getRadio(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/PlaylistRoutes.getRadio|getRadio(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTracks(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/PlaylistRoutes.getTracks|getTracks(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/PodcastRoutes { // io.github.kingg22.deezer.client.api.routes/PodcastRoutes|null[0]
    abstract suspend fun getAll(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.routes/PodcastRoutes.getAll|getAll(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/Podcast // io.github.kingg22.deezer.client.api.routes/PodcastRoutes.getById|getById(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getEpisodes(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Episode> // io.github.kingg22.deezer.client.api.routes/PodcastRoutes.getEpisodes|getEpisodes(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/RadioRoutes { // io.github.kingg22.deezer.client.api.routes/RadioRoutes|null[0]
    abstract suspend fun getAll(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getAll|getAll(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getAllSplitInGenres(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Genre> // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getAllSplitInGenres|getAllSplitInGenres(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Radio // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getById|getById(kotlin.Long){}[0]
    abstract suspend fun getLists(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getLists|getLists(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTop(kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getTop|getTop(kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun getTracks(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/RadioRoutes.getTracks|getTracks(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/SearchRoutes { // io.github.kingg22.deezer.client.api.routes/SearchRoutes|null[0]
    abstract suspend fun search(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.search|search(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchAlbum(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchAlbum|searchAlbum(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchArtist(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchArtist|searchArtist(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchHistory(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/SearchUserHistory> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchHistory|searchHistory(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchPlaylist(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchPlaylist|searchPlaylist(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchPodcast(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchPodcast|searchPodcast(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchRadio(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchRadio|searchRadio(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchTrack(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchTrack|searchTrack(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]
    abstract suspend fun searchUser(kotlin/String, kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/SearchOrder? = ..., kotlin/Int? = ..., kotlin/Int? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/User> // io.github.kingg22.deezer.client.api.routes/SearchRoutes.searchUser|searchUser(kotlin.String;kotlin.String?;io.github.kingg22.deezer.client.api.objects.SearchOrder?;kotlin.Int?;kotlin.Int?){}[0]

    final class AdvancedQueryBuilder { // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder|null[0]
        constructor <init>() // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.<init>|<init>(){}[0]

        final var album // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.album|{}album[0]
            final fun <get-album>(): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.album.<get-album>|<get-album>(){}[0]
            final fun <set-album>(kotlin/String?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.album.<set-album>|<set-album>(kotlin.String?){}[0]
        final var artist // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.artist|{}artist[0]
            final fun <get-artist>(): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.artist.<get-artist>|<get-artist>(){}[0]
            final fun <set-artist>(kotlin/String?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.artist.<set-artist>|<set-artist>(kotlin.String?){}[0]
        final var durationMin // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMin|{}durationMin[0]
            final fun <get-durationMin>(): kotlin.time/Duration? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMin.<get-durationMin>|<get-durationMin>(){}[0]
            final fun <set-durationMin>(kotlin.time/Duration?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMin.<set-durationMin>|<set-durationMin>(kotlin.time.Duration?){}[0]
        final var label // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.label|{}label[0]
            final fun <get-label>(): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.label.<get-label>|<get-label>(){}[0]
            final fun <set-label>(kotlin/String?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.label.<set-label>|<set-label>(kotlin.String?){}[0]
        final var q // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.q|{}q[0]
            final fun <get-q>(): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.q.<get-q>|<get-q>(){}[0]
            final fun <set-q>(kotlin/String?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.q.<set-q>|<set-q>(kotlin.String?){}[0]
        final var track // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.track|{}track[0]
            final fun <get-track>(): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.track.<get-track>|<get-track>(){}[0]
            final fun <set-track>(kotlin/String?) // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.track.<set-track>|<set-track>(kotlin.String?){}[0]

        final fun album(kotlin/String?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.album|album(kotlin.String?){}[0]
        final fun artist(kotlin/String?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.artist|artist(kotlin.String?){}[0]
        final fun bpmMax(kotlin/Int?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.bpmMax|bpmMax(kotlin.Int?){}[0]
        final fun bpmMin(kotlin/Int?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.bpmMin|bpmMin(kotlin.Int?){}[0]
        final fun build(): kotlin/String // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.build|build(){}[0]
        final fun durationMax(kotlin.time/Duration?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMax|durationMax(kotlin.time.Duration?){}[0]
        final fun durationMax(kotlin/Long?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMax|durationMax(kotlin.Long?){}[0]
        final fun durationMin(kotlin.time/Duration?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMin|durationMin(kotlin.time.Duration?){}[0]
        final fun durationMin(kotlin/Long?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.durationMin|durationMin(kotlin.Long?){}[0]
        final fun label(kotlin/String?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.label|label(kotlin.String?){}[0]
        final fun q(kotlin/String?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.q|q(kotlin.String?){}[0]
        final fun track(kotlin/String?): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder.track|track(kotlin.String?){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.routes/SearchRoutes.Companion|null[0]
        final fun buildAdvancedQuery(kotlin/Function1<io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder, kotlin/Unit>): kotlin/String // io.github.kingg22.deezer.client.api.routes/SearchRoutes.Companion.buildAdvancedQuery|buildAdvancedQuery(kotlin.Function1<io.github.kingg22.deezer.client.api.routes.SearchRoutes.AdvancedQueryBuilder,kotlin.Unit>){}[0]
        final fun buildAdvancedQuery(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.time/Duration? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., kotlin/Int? = ...): kotlin/String // io.github.kingg22.deezer.client.api.routes/SearchRoutes.Companion.buildAdvancedQuery|buildAdvancedQuery(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.time.Duration?;kotlin.time.Duration?;kotlin.Int?;kotlin.Int?){}[0]
        final fun builder(kotlin/String? = ...): io.github.kingg22.deezer.client.api.routes/SearchRoutes.AdvancedQueryBuilder // io.github.kingg22.deezer.client.api.routes/SearchRoutes.Companion.builder|builder(kotlin.String?){}[0]
        final fun setStrict(kotlin/Boolean): kotlin/String? // io.github.kingg22.deezer.client.api.routes/SearchRoutes.Companion.setStrict|setStrict(kotlin.Boolean){}[0]
    }
}

abstract interface io.github.kingg22.deezer.client.api.routes/TrackRoutes { // io.github.kingg22.deezer.client.api.routes/TrackRoutes|null[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/Track // io.github.kingg22.deezer.client.api.routes/TrackRoutes.getById|getById(kotlin.Long){}[0]
    abstract suspend fun getByIsrc(kotlin/String): io.github.kingg22.deezer.client.api.objects/Track // io.github.kingg22.deezer.client.api.routes/TrackRoutes.getByIsrc|getByIsrc(kotlin.String){}[0]
}

abstract interface io.github.kingg22.deezer.client.api.routes/UserRoutes { // io.github.kingg22.deezer.client.api.routes/UserRoutes|null[0]
    abstract suspend fun getById(kotlin/Long): io.github.kingg22.deezer.client.api.objects/User // io.github.kingg22.deezer.client.api.routes/UserRoutes.getById|getById(kotlin.Long){}[0]
}

abstract interface io.github.kingg22.deezer.client.utils/LateInitClient { // io.github.kingg22.deezer.client.utils/LateInitClient|null[0]
    abstract fun isInitialized(): kotlin/Boolean // io.github.kingg22.deezer.client.utils/LateInitClient.isInitialized|isInitialized(){}[0]
}

final class <#A: kotlin/Any> io.github.kingg22.deezer.client.api.objects/PaginatedResponse { // io.github.kingg22.deezer.client.api.objects/PaginatedResponse|null[0]
    constructor <init>(kotlin.collections/List<#A> = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ...) // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.<init>|<init>(kotlin.collections.List<1:0>;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.String?){}[0]

    final val checksum // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.checksum|{}checksum[0]
        final fun <get-checksum>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.checksum.<get-checksum>|<get-checksum>(){}[0]
    final val data // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<#A> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.data.<get-data>|<get-data>(){}[0]
    final val next // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.next|{}next[0]
        final fun <get-next>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.next.<get-next>|<get-next>(){}[0]
    final val prev // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.prev|{}prev[0]
        final fun <get-prev>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.prev.<get-prev>|<get-prev>(){}[0]
    final val total // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.total|{}total[0]
        final fun <get-total>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.total.<get-total>|<get-total>(){}[0]

    final fun client(): io.github.kingg22.deezer.client.api/DeezerApiClient // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.client|client(){}[0]
    final fun component1(): kotlin.collections/List<#A> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.component1|component1(){}[0]
    final fun component2(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.component3|component3(){}[0]
    final fun component4(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.component4|component4(){}[0]
    final fun component5(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.component5|component5(){}[0]
    final fun copy(kotlin.collections/List<#A> = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.copy|copy(kotlin.collections.List<1:0>;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.toString|toString(){}[0]

    final class <#A1: kotlin/Any?> $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A1>> { // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer|null[0]
        constructor <init>(kotlinx.serialization/KSerializer<#A1>) // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

        final val descriptor // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val typeSerial0 // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.typeSerial0|{}typeSerial0[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A1> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A1>) // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<1:0>){}[0]
        final fun typeParametersSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.$serializer.typeParametersSerializers|typeParametersSerializers(){}[0]
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.Companion|null[0]
        final val $cachedDescriptor // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.Companion.$cachedDescriptor|{}$cachedDescriptor[0]
            final fun <get-$cachedDescriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.Companion.$cachedDescriptor.<get-$cachedDescriptor>|<get-$cachedDescriptor>(){}[0]

        final fun <#A2: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A2>): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A2>> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.api.objects/PaginatedResponse.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Album : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Album|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Genre>? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., io.github.kingg22.deezer.client.api.objects/Album? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., io.github.kingg22.deezer.client.api.objects/Explicit? = ..., io.github.kingg22.deezer.client.api.objects/Explicit? = ..., kotlin/Int? = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist>? = ..., io.github.kingg22.deezer.client.api.objects/Artist? = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track>? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Album.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Long?;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Genre>?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlin.Boolean?;io.github.kingg22.deezer.client.api.objects.Album?;kotlin.String?;kotlin.Boolean?;io.github.kingg22.deezer.client.api.objects.Explicit?;io.github.kingg22.deezer.client.api.objects.Explicit?;kotlin.Int?;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Artist>?;io.github.kingg22.deezer.client.api.objects.Artist?;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Track>?;kotlin.String){}[0]

    final val alternative // io.github.kingg22.deezer.client.api.objects/Album.alternative|{}alternative[0]
        final fun <get-alternative>(): io.github.kingg22.deezer.client.api.objects/Album? // io.github.kingg22.deezer.client.api.objects/Album.alternative.<get-alternative>|<get-alternative>(){}[0]
    final val artist // io.github.kingg22.deezer.client.api.objects/Album.artist|{}artist[0]
        final fun <get-artist>(): io.github.kingg22.deezer.client.api.objects/Artist? // io.github.kingg22.deezer.client.api.objects/Album.artist.<get-artist>|<get-artist>(){}[0]
    final val contributors // io.github.kingg22.deezer.client.api.objects/Album.contributors|{}contributors[0]
        final fun <get-contributors>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist>? // io.github.kingg22.deezer.client.api.objects/Album.contributors.<get-contributors>|<get-contributors>(){}[0]
    final val cover // io.github.kingg22.deezer.client.api.objects/Album.cover|{}cover[0]
        final fun <get-cover>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.cover.<get-cover>|<get-cover>(){}[0]
    final val coverBig // io.github.kingg22.deezer.client.api.objects/Album.coverBig|{}coverBig[0]
        final fun <get-coverBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.coverBig.<get-coverBig>|<get-coverBig>(){}[0]
    final val coverMedium // io.github.kingg22.deezer.client.api.objects/Album.coverMedium|{}coverMedium[0]
        final fun <get-coverMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.coverMedium.<get-coverMedium>|<get-coverMedium>(){}[0]
    final val coverSmall // io.github.kingg22.deezer.client.api.objects/Album.coverSmall|{}coverSmall[0]
        final fun <get-coverSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.coverSmall.<get-coverSmall>|<get-coverSmall>(){}[0]
    final val coverXl // io.github.kingg22.deezer.client.api.objects/Album.coverXl|{}coverXl[0]
        final fun <get-coverXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.coverXl.<get-coverXl>|<get-coverXl>(){}[0]
    final val duration // io.github.kingg22.deezer.client.api.objects/Album.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Album.duration.<get-duration>|<get-duration>(){}[0]
    final val explicitContentCover // io.github.kingg22.deezer.client.api.objects/Album.explicitContentCover|{}explicitContentCover[0]
        final fun <get-explicitContentCover>(): io.github.kingg22.deezer.client.api.objects/Explicit? // io.github.kingg22.deezer.client.api.objects/Album.explicitContentCover.<get-explicitContentCover>|<get-explicitContentCover>(){}[0]
    final val explicitContentLyrics // io.github.kingg22.deezer.client.api.objects/Album.explicitContentLyrics|{}explicitContentLyrics[0]
        final fun <get-explicitContentLyrics>(): io.github.kingg22.deezer.client.api.objects/Explicit? // io.github.kingg22.deezer.client.api.objects/Album.explicitContentLyrics.<get-explicitContentLyrics>|<get-explicitContentLyrics>(){}[0]
    final val fans // io.github.kingg22.deezer.client.api.objects/Album.fans|{}fans[0]
        final fun <get-fans>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Album.fans.<get-fans>|<get-fans>(){}[0]
    final val genreId // io.github.kingg22.deezer.client.api.objects/Album.genreId|{}genreId[0]
        final fun <get-genreId>(): kotlin/Long? // io.github.kingg22.deezer.client.api.objects/Album.genreId.<get-genreId>|<get-genreId>(){}[0]
    final val genres // io.github.kingg22.deezer.client.api.objects/Album.genres|{}genres[0]
        final fun <get-genres>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Genre>? // io.github.kingg22.deezer.client.api.objects/Album.genres.<get-genres>|<get-genres>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Album.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Album.id.<get-id>|<get-id>(){}[0]
    final val isAvailable // io.github.kingg22.deezer.client.api.objects/Album.isAvailable|{}isAvailable[0]
        final fun <get-isAvailable>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Album.isAvailable.<get-isAvailable>|<get-isAvailable>(){}[0]
    final val isExplicitLyrics // io.github.kingg22.deezer.client.api.objects/Album.isExplicitLyrics|{}isExplicitLyrics[0]
        final fun <get-isExplicitLyrics>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Album.isExplicitLyrics.<get-isExplicitLyrics>|<get-isExplicitLyrics>(){}[0]
    final val label // io.github.kingg22.deezer.client.api.objects/Album.label|{}label[0]
        final fun <get-label>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.label.<get-label>|<get-label>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Album.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.link.<get-link>|<get-link>(){}[0]
    final val md5Image // io.github.kingg22.deezer.client.api.objects/Album.md5Image|{}md5Image[0]
        final fun <get-md5Image>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.md5Image.<get-md5Image>|<get-md5Image>(){}[0]
    final val position // io.github.kingg22.deezer.client.api.objects/Album.position|{}position[0]
        final fun <get-position>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Album.position.<get-position>|<get-position>(){}[0]
    final val rating // io.github.kingg22.deezer.client.api.objects/Album.rating|{}rating[0]
        final fun <get-rating>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Album.rating.<get-rating>|<get-rating>(){}[0]
    final val recordType // io.github.kingg22.deezer.client.api.objects/Album.recordType|{}recordType[0]
        final fun <get-recordType>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.recordType.<get-recordType>|<get-recordType>(){}[0]
    final val releaseDate // io.github.kingg22.deezer.client.api.objects/Album.releaseDate|{}releaseDate[0]
        final fun <get-releaseDate>(): kotlinx.datetime/LocalDate? // io.github.kingg22.deezer.client.api.objects/Album.releaseDate.<get-releaseDate>|<get-releaseDate>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Album.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.share.<get-share>|<get-share>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Album.title|{}title[0]
        final fun <get-title>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Album.title.<get-title>|<get-title>(){}[0]
    final val trackCount // io.github.kingg22.deezer.client.api.objects/Album.trackCount|{}trackCount[0]
        final fun <get-trackCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Album.trackCount.<get-trackCount>|<get-trackCount>(){}[0]
    final val tracklist // io.github.kingg22.deezer.client.api.objects/Album.tracklist|{}tracklist[0]
        final fun <get-tracklist>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.tracklist.<get-tracklist>|<get-tracklist>(){}[0]
    final val tracks // io.github.kingg22.deezer.client.api.objects/Album.tracks|{}tracks[0]
        final fun <get-tracks>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track>? // io.github.kingg22.deezer.client.api.objects/Album.tracks.<get-tracks>|<get-tracks>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Album.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Album.type.<get-type>|<get-type>(){}[0]
    final val upc // io.github.kingg22.deezer.client.api.objects/Album.upc|{}upc[0]
        final fun <get-upc>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Album.upc.<get-upc>|<get-upc>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Album.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Album.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Album.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Album // io.github.kingg22.deezer.client.api.objects/Album.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Album> { // io.github.kingg22.deezer.client.api.objects/Album.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Album.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Album.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Album.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Album // io.github.kingg22.deezer.client.api.objects/Album.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Album) // io.github.kingg22.deezer.client.api.objects/Album.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Album){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Album.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Album.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.objects/Album.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Artist : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Artist|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/Int? = ...) // io.github.kingg22.deezer.client.api.objects/Artist.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.String?;kotlin.String;kotlin.String?;kotlin.Int?){}[0]

    final val albumCount // io.github.kingg22.deezer.client.api.objects/Artist.albumCount|{}albumCount[0]
        final fun <get-albumCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Artist.albumCount.<get-albumCount>|<get-albumCount>(){}[0]
    final val fansCount // io.github.kingg22.deezer.client.api.objects/Artist.fansCount|{}fansCount[0]
        final fun <get-fansCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Artist.fansCount.<get-fansCount>|<get-fansCount>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Artist.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Artist.id.<get-id>|<get-id>(){}[0]
    final val isRadio // io.github.kingg22.deezer.client.api.objects/Artist.isRadio|{}isRadio[0]
        final fun <get-isRadio>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Artist.isRadio.<get-isRadio>|<get-isRadio>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Artist.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.link.<get-link>|<get-link>(){}[0]
    final val name // io.github.kingg22.deezer.client.api.objects/Artist.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Artist.name.<get-name>|<get-name>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Artist.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Artist.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Artist.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Artist.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Artist.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val position // io.github.kingg22.deezer.client.api.objects/Artist.position|{}position[0]
        final fun <get-position>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Artist.position.<get-position>|<get-position>(){}[0]
    final val role // io.github.kingg22.deezer.client.api.objects/Artist.role|{}role[0]
        final fun <get-role>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.role.<get-role>|<get-role>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Artist.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.share.<get-share>|<get-share>(){}[0]
    final val tracklist // io.github.kingg22.deezer.client.api.objects/Artist.tracklist|{}tracklist[0]
        final fun <get-tracklist>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Artist.tracklist.<get-tracklist>|<get-tracklist>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Artist.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Artist.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Artist.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Artist.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Artist.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Artist // io.github.kingg22.deezer.client.api.objects/Artist.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Artist> { // io.github.kingg22.deezer.client.api.objects/Artist.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Artist.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Artist.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Artist.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Artist // io.github.kingg22.deezer.client.api.objects/Artist.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Artist) // io.github.kingg22.deezer.client.api.objects/Artist.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Artist){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Artist.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.objects/Artist.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Chart { // io.github.kingg22.deezer.client.api.objects/Chart|null[0]
    constructor <init>(io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Playlist> = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> = ...) // io.github.kingg22.deezer.client.api.objects/Chart.<init>|<init>(io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Track>;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Album>;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Artist>;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Playlist>;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Podcast>){}[0]

    final val albums // io.github.kingg22.deezer.client.api.objects/Chart.albums|{}albums[0]
        final fun <get-albums>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.objects/Chart.albums.<get-albums>|<get-albums>(){}[0]
    final val artists // io.github.kingg22.deezer.client.api.objects/Chart.artists|{}artists[0]
        final fun <get-artists>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.objects/Chart.artists.<get-artists>|<get-artists>(){}[0]
    final val playlists // io.github.kingg22.deezer.client.api.objects/Chart.playlists|{}playlists[0]
        final fun <get-playlists>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.objects/Chart.playlists.<get-playlists>|<get-playlists>(){}[0]
    final val podcasts // io.github.kingg22.deezer.client.api.objects/Chart.podcasts|{}podcasts[0]
        final fun <get-podcasts>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.objects/Chart.podcasts.<get-podcasts>|<get-podcasts>(){}[0]
    final val tracks // io.github.kingg22.deezer.client.api.objects/Chart.tracks|{}tracks[0]
        final fun <get-tracks>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.objects/Chart.tracks.<get-tracks>|<get-tracks>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Chart.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Chart.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Chart.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Chart> { // io.github.kingg22.deezer.client.api.objects/Chart.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Chart.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Chart.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Chart.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Chart // io.github.kingg22.deezer.client.api.objects/Chart.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Chart) // io.github.kingg22.deezer.client.api.objects/Chart.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Chart){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Chart.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Chart.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Chart> // io.github.kingg22.deezer.client.api.objects/Chart.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Editorial : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Editorial|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Editorial.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String){}[0]

    final val id // io.github.kingg22.deezer.client.api.objects/Editorial.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Editorial.id.<get-id>|<get-id>(){}[0]
    final val name // io.github.kingg22.deezer.client.api.objects/Editorial.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Editorial.name.<get-name>|<get-name>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Editorial.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Editorial.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Editorial.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Editorial.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Editorial.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Editorial.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Editorial.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Editorial.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Editorial.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Editorial.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Editorial.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Editorial.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Editorial.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Editorial.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Editorial.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Editorial // io.github.kingg22.deezer.client.api.objects/Editorial.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Editorial> { // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Editorial // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Editorial) // io.github.kingg22.deezer.client.api.objects/Editorial.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Editorial){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Editorial.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Editorial> // io.github.kingg22.deezer.client.api.objects/Editorial.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Episode : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Episode|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/Int, kotlinx.datetime/LocalDateTime, kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/Podcast? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Episode.<init>|<init>(kotlin.Long;kotlin.String;kotlin.Int;kotlinx.datetime.LocalDateTime;kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;io.github.kingg22.deezer.client.api.objects.Podcast?;kotlin.String){}[0]

    final val description // io.github.kingg22.deezer.client.api.objects/Episode.description|{}description[0]
        final fun <get-description>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.description.<get-description>|<get-description>(){}[0]
    final val duration // io.github.kingg22.deezer.client.api.objects/Episode.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Episode.duration.<get-duration>|<get-duration>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Episode.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Episode.id.<get-id>|<get-id>(){}[0]
    final val isAvailable // io.github.kingg22.deezer.client.api.objects/Episode.isAvailable|{}isAvailable[0]
        final fun <get-isAvailable>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Episode.isAvailable.<get-isAvailable>|<get-isAvailable>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Episode.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.link.<get-link>|<get-link>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Episode.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Episode.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Episode.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Episode.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Episode.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val podcast // io.github.kingg22.deezer.client.api.objects/Episode.podcast|{}podcast[0]
        final fun <get-podcast>(): io.github.kingg22.deezer.client.api.objects/Podcast? // io.github.kingg22.deezer.client.api.objects/Episode.podcast.<get-podcast>|<get-podcast>(){}[0]
    final val releaseDate // io.github.kingg22.deezer.client.api.objects/Episode.releaseDate|{}releaseDate[0]
        final fun <get-releaseDate>(): kotlinx.datetime/LocalDateTime // io.github.kingg22.deezer.client.api.objects/Episode.releaseDate.<get-releaseDate>|<get-releaseDate>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Episode.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.share.<get-share>|<get-share>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Episode.title|{}title[0]
        final fun <get-title>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Episode.title.<get-title>|<get-title>(){}[0]
    final val trackToken // io.github.kingg22.deezer.client.api.objects/Episode.trackToken|{}trackToken[0]
        final fun <get-trackToken>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Episode.trackToken.<get-trackToken>|<get-trackToken>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Episode.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Episode.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Episode.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Episode.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Episode.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Episode // io.github.kingg22.deezer.client.api.objects/Episode.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Episode> { // io.github.kingg22.deezer.client.api.objects/Episode.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Episode.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Episode.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Episode.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Episode // io.github.kingg22.deezer.client.api.objects/Episode.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Episode) // io.github.kingg22.deezer.client.api.objects/Episode.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Episode){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Episode.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Episode> // io.github.kingg22.deezer.client.api.objects/Episode.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Genre : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Genre|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Radio>? = ...) // io.github.kingg22.deezer.client.api.objects/Genre.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Radio>?){}[0]

    final val id // io.github.kingg22.deezer.client.api.objects/Genre.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Genre.id.<get-id>|<get-id>(){}[0]
    final val name // io.github.kingg22.deezer.client.api.objects/Genre.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Genre.name.<get-name>|<get-name>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Genre.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Genre.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Genre.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Genre.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Genre.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Genre.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Genre.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Genre.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Genre.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Genre.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val radios // io.github.kingg22.deezer.client.api.objects/Genre.radios|{}radios[0]
        final fun <get-radios>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Radio>? // io.github.kingg22.deezer.client.api.objects/Genre.radios.<get-radios>|<get-radios>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Genre.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Genre.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Genre.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Genre.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Genre.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Genre // io.github.kingg22.deezer.client.api.objects/Genre.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Genre> { // io.github.kingg22.deezer.client.api.objects/Genre.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Genre.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Genre.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Genre.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Genre // io.github.kingg22.deezer.client.api.objects/Genre.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Genre) // io.github.kingg22.deezer.client.api.objects/Genre.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Genre){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Genre.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Genre.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Genre> // io.github.kingg22.deezer.client.api.objects/Genre.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Infos { // io.github.kingg22.deezer.client.api.objects/Infos|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Boolean, kotlin.collections/List<kotlinx.serialization.json/JsonElement> = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/Infos.HostDetails? = ..., kotlinx.serialization.json/JsonObject? = ..., kotlin/Boolean? = ...) // io.github.kingg22.deezer.client.api.objects/Infos.<init>|<init>(kotlin.String;kotlin.String;kotlin.Boolean;kotlin.collections.List<kotlinx.serialization.json.JsonElement>;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.String?;io.github.kingg22.deezer.client.api.objects.Infos.HostDetails?;kotlinx.serialization.json.JsonObject?;kotlin.Boolean?){}[0]

    final val ads // io.github.kingg22.deezer.client.api.objects/Infos.ads|{}ads[0]
        final fun <get-ads>(): kotlinx.serialization.json/JsonObject? // io.github.kingg22.deezer.client.api.objects/Infos.ads.<get-ads>|<get-ads>(){}[0]
    final val country // io.github.kingg22.deezer.client.api.objects/Infos.country|{}country[0]
        final fun <get-country>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Infos.country.<get-country>|<get-country>(){}[0]
    final val countryIso // io.github.kingg22.deezer.client.api.objects/Infos.countryIso|{}countryIso[0]
        final fun <get-countryIso>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Infos.countryIso.<get-countryIso>|<get-countryIso>(){}[0]
    final val hasPodcast // io.github.kingg22.deezer.client.api.objects/Infos.hasPodcast|{}hasPodcast[0]
        final fun <get-hasPodcast>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Infos.hasPodcast.<get-hasPodcast>|<get-hasPodcast>(){}[0]
    final val hosts // io.github.kingg22.deezer.client.api.objects/Infos.hosts|{}hosts[0]
        final fun <get-hosts>(): io.github.kingg22.deezer.client.api.objects/Infos.HostDetails? // io.github.kingg22.deezer.client.api.objects/Infos.hosts.<get-hosts>|<get-hosts>(){}[0]
    final val isOpen // io.github.kingg22.deezer.client.api.objects/Infos.isOpen|{}isOpen[0]
        final fun <get-isOpen>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Infos.isOpen.<get-isOpen>|<get-isOpen>(){}[0]
    final val offers // io.github.kingg22.deezer.client.api.objects/Infos.offers|{}offers[0]
        final fun <get-offers>(): kotlin.collections/List<kotlinx.serialization.json/JsonElement> // io.github.kingg22.deezer.client.api.objects/Infos.offers.<get-offers>|<get-offers>(){}[0]
    final val pop // io.github.kingg22.deezer.client.api.objects/Infos.pop|{}pop[0]
        final fun <get-pop>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Infos.pop.<get-pop>|<get-pop>(){}[0]
    final val uploadToken // io.github.kingg22.deezer.client.api.objects/Infos.uploadToken|{}uploadToken[0]
        final fun <get-uploadToken>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Infos.uploadToken.<get-uploadToken>|<get-uploadToken>(){}[0]
    final val uploadTokenLifetime // io.github.kingg22.deezer.client.api.objects/Infos.uploadTokenLifetime|{}uploadTokenLifetime[0]
        final fun <get-uploadTokenLifetime>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Infos.uploadTokenLifetime.<get-uploadTokenLifetime>|<get-uploadTokenLifetime>(){}[0]
    final val userToken // io.github.kingg22.deezer.client.api.objects/Infos.userToken|{}userToken[0]
        final fun <get-userToken>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Infos.userToken.<get-userToken>|<get-userToken>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Infos.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Infos.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Infos.toString|toString(){}[0]

    final class HostDetails { // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails|null[0]
        constructor <init>(kotlin/String? = ..., kotlin/String? = ...) // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.<init>|<init>(kotlin.String?;kotlin.String?){}[0]

        final val images // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.images|{}images[0]
            final fun <get-images>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.images.<get-images>|<get-images>(){}[0]
        final val stream // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.stream|{}stream[0]
            final fun <get-stream>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.stream.<get-stream>|<get-stream>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Infos.HostDetails> { // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer|null[0]
            final val descriptor // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Infos.HostDetails // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Infos.HostDetails) // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Infos.HostDetails){}[0]
        }

        final object Companion { // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Infos.HostDetails> // io.github.kingg22.deezer.client.api.objects/Infos.HostDetails.Companion.serializer|serializer(){}[0]
        }
    }

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Infos> { // io.github.kingg22.deezer.client.api.objects/Infos.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Infos.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Infos.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Infos.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Infos // io.github.kingg22.deezer.client.api.objects/Infos.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Infos) // io.github.kingg22.deezer.client.api.objects/Infos.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Infos){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Infos.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Infos.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Infos> // io.github.kingg22.deezer.client.api.objects/Infos.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Options { // io.github.kingg22.deezer.client.api.objects/Options|null[0]
    constructor <init>(kotlin/Boolean, kotlin/Int, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Int, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Options.<init>|<init>(kotlin.Boolean;kotlin.Int;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Int;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.String){}[0]

    final val isAdsAudio // io.github.kingg22.deezer.client.api.objects/Options.isAdsAudio|{}isAdsAudio[0]
        final fun <get-isAdsAudio>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isAdsAudio.<get-isAdsAudio>|<get-isAdsAudio>(){}[0]
    final val isAdsDisplay // io.github.kingg22.deezer.client.api.objects/Options.isAdsDisplay|{}isAdsDisplay[0]
        final fun <get-isAdsDisplay>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isAdsDisplay.<get-isAdsDisplay>|<get-isAdsDisplay>(){}[0]
    final val isCanSubscribe // io.github.kingg22.deezer.client.api.objects/Options.isCanSubscribe|{}isCanSubscribe[0]
        final fun <get-isCanSubscribe>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isCanSubscribe.<get-isCanSubscribe>|<get-isCanSubscribe>(){}[0]
    final val isHq // io.github.kingg22.deezer.client.api.objects/Options.isHq|{}isHq[0]
        final fun <get-isHq>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isHq.<get-isHq>|<get-isHq>(){}[0]
    final val isLossless // io.github.kingg22.deezer.client.api.objects/Options.isLossless|{}isLossless[0]
        final fun <get-isLossless>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isLossless.<get-isLossless>|<get-isLossless>(){}[0]
    final val isOffline // io.github.kingg22.deezer.client.api.objects/Options.isOffline|{}isOffline[0]
        final fun <get-isOffline>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isOffline.<get-isOffline>|<get-isOffline>(){}[0]
    final val isPreview // io.github.kingg22.deezer.client.api.objects/Options.isPreview|{}isPreview[0]
        final fun <get-isPreview>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isPreview.<get-isPreview>|<get-isPreview>(){}[0]
    final val isRadio // io.github.kingg22.deezer.client.api.objects/Options.isRadio|{}isRadio[0]
        final fun <get-isRadio>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isRadio.<get-isRadio>|<get-isRadio>(){}[0]
    final val isStreaming // io.github.kingg22.deezer.client.api.objects/Options.isStreaming|{}isStreaming[0]
        final fun <get-isStreaming>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isStreaming.<get-isStreaming>|<get-isStreaming>(){}[0]
    final val isTooManyDevices // io.github.kingg22.deezer.client.api.objects/Options.isTooManyDevices|{}isTooManyDevices[0]
        final fun <get-isTooManyDevices>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.isTooManyDevices.<get-isTooManyDevices>|<get-isTooManyDevices>(){}[0]
    final val radioSkips // io.github.kingg22.deezer.client.api.objects/Options.radioSkips|{}radioSkips[0]
        final fun <get-radioSkips>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Options.radioSkips.<get-radioSkips>|<get-radioSkips>(){}[0]
    final val streamingDuration // io.github.kingg22.deezer.client.api.objects/Options.streamingDuration|{}streamingDuration[0]
        final fun <get-streamingDuration>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Options.streamingDuration.<get-streamingDuration>|<get-streamingDuration>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Options.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Options.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Options.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Options.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Options.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Options> { // io.github.kingg22.deezer.client.api.objects/Options.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Options.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Options.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Options.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Options // io.github.kingg22.deezer.client.api.objects/Options.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Options) // io.github.kingg22.deezer.client.api.objects/Options.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Options){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Options.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Options> // io.github.kingg22.deezer.client.api.objects/Options.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Playlist : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Playlist|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/Boolean, kotlin/String? = ..., kotlin/Int? = ..., kotlin/String, io.github.kingg22.deezer.client.api.objects/User, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track>? = ..., kotlinx.datetime/LocalDateTime? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/Int? = ..., kotlin/String? = ...) // io.github.kingg22.deezer.client.api.objects/Playlist.<init>|<init>(kotlin.Long;kotlin.String;kotlin.Boolean;kotlin.String?;kotlin.Int?;kotlin.String;io.github.kingg22.deezer.client.api.objects.User;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;io.github.kingg22.deezer.client.api.objects.PaginatedResponse<io.github.kingg22.deezer.client.api.objects.Track>?;kotlinx.datetime.LocalDateTime?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.Int?;kotlin.String?){}[0]

    final val checksum // io.github.kingg22.deezer.client.api.objects/Playlist.checksum|{}checksum[0]
        final fun <get-checksum>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.checksum.<get-checksum>|<get-checksum>(){}[0]
    final val creationDate // io.github.kingg22.deezer.client.api.objects/Playlist.creationDate|{}creationDate[0]
        final fun <get-creationDate>(): kotlinx.datetime/LocalDateTime? // io.github.kingg22.deezer.client.api.objects/Playlist.creationDate.<get-creationDate>|<get-creationDate>(){}[0]
    final val creator // io.github.kingg22.deezer.client.api.objects/Playlist.creator|{}creator[0]
        final fun <get-creator>(): io.github.kingg22.deezer.client.api.objects/User // io.github.kingg22.deezer.client.api.objects/Playlist.creator.<get-creator>|<get-creator>(){}[0]
    final val description // io.github.kingg22.deezer.client.api.objects/Playlist.description|{}description[0]
        final fun <get-description>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.description.<get-description>|<get-description>(){}[0]
    final val duration // io.github.kingg22.deezer.client.api.objects/Playlist.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.duration.<get-duration>|<get-duration>(){}[0]
    final val fanCount // io.github.kingg22.deezer.client.api.objects/Playlist.fanCount|{}fanCount[0]
        final fun <get-fanCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.fanCount.<get-fanCount>|<get-fanCount>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Playlist.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Playlist.id.<get-id>|<get-id>(){}[0]
    final val isCollaborative // io.github.kingg22.deezer.client.api.objects/Playlist.isCollaborative|{}isCollaborative[0]
        final fun <get-isCollaborative>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Playlist.isCollaborative.<get-isCollaborative>|<get-isCollaborative>(){}[0]
    final val isLovedTrack // io.github.kingg22.deezer.client.api.objects/Playlist.isLovedTrack|{}isLovedTrack[0]
        final fun <get-isLovedTrack>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Playlist.isLovedTrack.<get-isLovedTrack>|<get-isLovedTrack>(){}[0]
    final val isPublic // io.github.kingg22.deezer.client.api.objects/Playlist.isPublic|{}isPublic[0]
        final fun <get-isPublic>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Playlist.isPublic.<get-isPublic>|<get-isPublic>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Playlist.link|{}link[0]
        final fun <get-link>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Playlist.link.<get-link>|<get-link>(){}[0]
    final val md5Image // io.github.kingg22.deezer.client.api.objects/Playlist.md5Image|{}md5Image[0]
        final fun <get-md5Image>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.md5Image.<get-md5Image>|<get-md5Image>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Playlist.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Playlist.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Playlist.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Playlist.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureType // io.github.kingg22.deezer.client.api.objects/Playlist.pictureType|{}pictureType[0]
        final fun <get-pictureType>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.pictureType.<get-pictureType>|<get-pictureType>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Playlist.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val position // io.github.kingg22.deezer.client.api.objects/Playlist.position|{}position[0]
        final fun <get-position>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.position.<get-position>|<get-position>(){}[0]
    final val rating // io.github.kingg22.deezer.client.api.objects/Playlist.rating|{}rating[0]
        final fun <get-rating>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.rating.<get-rating>|<get-rating>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Playlist.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.share.<get-share>|<get-share>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Playlist.title|{}title[0]
        final fun <get-title>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Playlist.title.<get-title>|<get-title>(){}[0]
    final val trackCount // io.github.kingg22.deezer.client.api.objects/Playlist.trackCount|{}trackCount[0]
        final fun <get-trackCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.trackCount.<get-trackCount>|<get-trackCount>(){}[0]
    final val tracklist // io.github.kingg22.deezer.client.api.objects/Playlist.tracklist|{}tracklist[0]
        final fun <get-tracklist>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Playlist.tracklist.<get-tracklist>|<get-tracklist>(){}[0]
    final val tracks // io.github.kingg22.deezer.client.api.objects/Playlist.tracks|{}tracks[0]
        final fun <get-tracks>(): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<io.github.kingg22.deezer.client.api.objects/Track>? // io.github.kingg22.deezer.client.api.objects/Playlist.tracks.<get-tracks>|<get-tracks>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Playlist.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Playlist.type.<get-type>|<get-type>(){}[0]
    final val unseenTrackCount // io.github.kingg22.deezer.client.api.objects/Playlist.unseenTrackCount|{}unseenTrackCount[0]
        final fun <get-unseenTrackCount>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Playlist.unseenTrackCount.<get-unseenTrackCount>|<get-unseenTrackCount>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Playlist.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Playlist.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Playlist.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Playlist // io.github.kingg22.deezer.client.api.objects/Playlist.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Playlist> { // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Playlist // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Playlist) // io.github.kingg22.deezer.client.api.objects/Playlist.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Playlist){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Playlist.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Playlist.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.objects/Playlist.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Podcast : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Podcast|null[0]
    constructor <init>(kotlin/Long, kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Podcast.<init>|<init>(kotlin.Long;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String){}[0]

    final val description // io.github.kingg22.deezer.client.api.objects/Podcast.description|{}description[0]
        final fun <get-description>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.description.<get-description>|<get-description>(){}[0]
    final val fans // io.github.kingg22.deezer.client.api.objects/Podcast.fans|{}fans[0]
        final fun <get-fans>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Podcast.fans.<get-fans>|<get-fans>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Podcast.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Podcast.id.<get-id>|<get-id>(){}[0]
    final val isAvailable // io.github.kingg22.deezer.client.api.objects/Podcast.isAvailable|{}isAvailable[0]
        final fun <get-isAvailable>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Podcast.isAvailable.<get-isAvailable>|<get-isAvailable>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Podcast.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.link.<get-link>|<get-link>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Podcast.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Podcast.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Podcast.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Podcast.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Podcast.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Podcast.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.share.<get-share>|<get-share>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Podcast.title|{}title[0]
        final fun <get-title>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Podcast.title.<get-title>|<get-title>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Podcast.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Podcast.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Podcast.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Podcast.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Podcast.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Podcast // io.github.kingg22.deezer.client.api.objects/Podcast.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Podcast> { // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Podcast // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Podcast) // io.github.kingg22.deezer.client.api.objects/Podcast.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Podcast){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Podcast.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.objects/Podcast.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Radio : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Radio|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/Radio.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String){}[0]

    final val description // io.github.kingg22.deezer.client.api.objects/Radio.description|{}description[0]
        final fun <get-description>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.description.<get-description>|<get-description>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Radio.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Radio.id.<get-id>|<get-id>(){}[0]
    final val md5Image // io.github.kingg22.deezer.client.api.objects/Radio.md5Image|{}md5Image[0]
        final fun <get-md5Image>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.md5Image.<get-md5Image>|<get-md5Image>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/Radio.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/Radio.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/Radio.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/Radio.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/Radio.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Radio.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.share.<get-share>|<get-share>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Radio.title|{}title[0]
        final fun <get-title>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Radio.title.<get-title>|<get-title>(){}[0]
    final val tracklist // io.github.kingg22.deezer.client.api.objects/Radio.tracklist|{}tracklist[0]
        final fun <get-tracklist>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Radio.tracklist.<get-tracklist>|<get-tracklist>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Radio.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Radio.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Radio.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Radio.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Radio.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Radio // io.github.kingg22.deezer.client.api.objects/Radio.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Radio> { // io.github.kingg22.deezer.client.api.objects/Radio.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Radio.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Radio.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Radio.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Radio // io.github.kingg22.deezer.client.api.objects/Radio.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Radio) // io.github.kingg22.deezer.client.api.objects/Radio.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Radio){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Radio.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.objects/Radio.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/SearchUserHistory { // io.github.kingg22.deezer.client.api.objects/SearchUserHistory|null[0]
    constructor <init>(kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Track> = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Album> = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist> = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Playlist> = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Podcast> = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Radio> = ...) // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.<init>|<init>(kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Track>;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Album>;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Artist>;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Playlist>;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Podcast>;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Radio>){}[0]

    final val albums // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.albums|{}albums[0]
        final fun <get-albums>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Album> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.albums.<get-albums>|<get-albums>(){}[0]
    final val artists // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.artists|{}artists[0]
        final fun <get-artists>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.artists.<get-artists>|<get-artists>(){}[0]
    final val playlists // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.playlists|{}playlists[0]
        final fun <get-playlists>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Playlist> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.playlists.<get-playlists>|<get-playlists>(){}[0]
    final val podcasts // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.podcasts|{}podcasts[0]
        final fun <get-podcasts>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Podcast> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.podcasts.<get-podcasts>|<get-podcasts>(){}[0]
    final val radio // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.radio|{}radio[0]
        final fun <get-radio>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Radio> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.radio.<get-radio>|<get-radio>(){}[0]
    final val tracks // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.tracks|{}tracks[0]
        final fun <get-tracks>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.tracks.<get-tracks>|<get-tracks>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/SearchUserHistory> { // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/SearchUserHistory // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/SearchUserHistory) // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.SearchUserHistory){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/SearchUserHistory> // io.github.kingg22.deezer.client.api.objects/SearchUserHistory.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/Track : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/Track|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String, kotlin/Int, kotlin/Int, kotlin/String, io.github.kingg22.deezer.client.api.objects/Artist, kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/Boolean, io.github.kingg22.deezer.client.api.objects/Explicit? = ..., io.github.kingg22.deezer.client.api.objects/Explicit? = ..., kotlin/Float? = ..., kotlin/Float? = ..., kotlin.collections/List<kotlin/String>? = ..., io.github.kingg22.deezer.client.api.objects/Track? = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist>? = ..., kotlin/String? = ..., kotlin/String? = ..., io.github.kingg22.deezer.client.api.objects/Album? = ..., kotlin/String = ..., kotlin/Int? = ..., kotlin/Long? = ...) // io.github.kingg22.deezer.client.api.objects/Track.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.String;io.github.kingg22.deezer.client.api.objects.Artist;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlinx.datetime.LocalDate?;kotlin.Boolean;io.github.kingg22.deezer.client.api.objects.Explicit?;io.github.kingg22.deezer.client.api.objects.Explicit?;kotlin.Float?;kotlin.Float?;kotlin.collections.List<kotlin.String>?;io.github.kingg22.deezer.client.api.objects.Track?;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.Artist>?;kotlin.String?;kotlin.String?;io.github.kingg22.deezer.client.api.objects.Album?;kotlin.String;kotlin.Int?;kotlin.Long?){}[0]

    final val album // io.github.kingg22.deezer.client.api.objects/Track.album|{}album[0]
        final fun <get-album>(): io.github.kingg22.deezer.client.api.objects/Album? // io.github.kingg22.deezer.client.api.objects/Track.album.<get-album>|<get-album>(){}[0]
    final val alternative // io.github.kingg22.deezer.client.api.objects/Track.alternative|{}alternative[0]
        final fun <get-alternative>(): io.github.kingg22.deezer.client.api.objects/Track? // io.github.kingg22.deezer.client.api.objects/Track.alternative.<get-alternative>|<get-alternative>(){}[0]
    final val artist // io.github.kingg22.deezer.client.api.objects/Track.artist|{}artist[0]
        final fun <get-artist>(): io.github.kingg22.deezer.client.api.objects/Artist // io.github.kingg22.deezer.client.api.objects/Track.artist.<get-artist>|<get-artist>(){}[0]
    final val availableCountries // io.github.kingg22.deezer.client.api.objects/Track.availableCountries|{}availableCountries[0]
        final fun <get-availableCountries>(): kotlin.collections/List<kotlin/String>? // io.github.kingg22.deezer.client.api.objects/Track.availableCountries.<get-availableCountries>|<get-availableCountries>(){}[0]
    final val bpm // io.github.kingg22.deezer.client.api.objects/Track.bpm|{}bpm[0]
        final fun <get-bpm>(): kotlin/Float? // io.github.kingg22.deezer.client.api.objects/Track.bpm.<get-bpm>|<get-bpm>(){}[0]
    final val contributors // io.github.kingg22.deezer.client.api.objects/Track.contributors|{}contributors[0]
        final fun <get-contributors>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/Artist>? // io.github.kingg22.deezer.client.api.objects/Track.contributors.<get-contributors>|<get-contributors>(){}[0]
    final val diskNumber // io.github.kingg22.deezer.client.api.objects/Track.diskNumber|{}diskNumber[0]
        final fun <get-diskNumber>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Track.diskNumber.<get-diskNumber>|<get-diskNumber>(){}[0]
    final val duration // io.github.kingg22.deezer.client.api.objects/Track.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Track.duration.<get-duration>|<get-duration>(){}[0]
    final val explicitContentCover // io.github.kingg22.deezer.client.api.objects/Track.explicitContentCover|{}explicitContentCover[0]
        final fun <get-explicitContentCover>(): io.github.kingg22.deezer.client.api.objects/Explicit? // io.github.kingg22.deezer.client.api.objects/Track.explicitContentCover.<get-explicitContentCover>|<get-explicitContentCover>(){}[0]
    final val explicitContentLyrics // io.github.kingg22.deezer.client.api.objects/Track.explicitContentLyrics|{}explicitContentLyrics[0]
        final fun <get-explicitContentLyrics>(): io.github.kingg22.deezer.client.api.objects/Explicit? // io.github.kingg22.deezer.client.api.objects/Track.explicitContentLyrics.<get-explicitContentLyrics>|<get-explicitContentLyrics>(){}[0]
    final val gain // io.github.kingg22.deezer.client.api.objects/Track.gain|{}gain[0]
        final fun <get-gain>(): kotlin/Float? // io.github.kingg22.deezer.client.api.objects/Track.gain.<get-gain>|<get-gain>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/Track.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/Track.id.<get-id>|<get-id>(){}[0]
    final val isExplicitLyrics // io.github.kingg22.deezer.client.api.objects/Track.isExplicitLyrics|{}isExplicitLyrics[0]
        final fun <get-isExplicitLyrics>(): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Track.isExplicitLyrics.<get-isExplicitLyrics>|<get-isExplicitLyrics>(){}[0]
    final val isReadable // io.github.kingg22.deezer.client.api.objects/Track.isReadable|{}isReadable[0]
        final fun <get-isReadable>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Track.isReadable.<get-isReadable>|<get-isReadable>(){}[0]
    final val isUnseen // io.github.kingg22.deezer.client.api.objects/Track.isUnseen|{}isUnseen[0]
        final fun <get-isUnseen>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/Track.isUnseen.<get-isUnseen>|<get-isUnseen>(){}[0]
    final val isrc // io.github.kingg22.deezer.client.api.objects/Track.isrc|{}isrc[0]
        final fun <get-isrc>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.isrc.<get-isrc>|<get-isrc>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/Track.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.link.<get-link>|<get-link>(){}[0]
    final val md5Image // io.github.kingg22.deezer.client.api.objects/Track.md5Image|{}md5Image[0]
        final fun <get-md5Image>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.md5Image.<get-md5Image>|<get-md5Image>(){}[0]
    final val position // io.github.kingg22.deezer.client.api.objects/Track.position|{}position[0]
        final fun <get-position>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Track.position.<get-position>|<get-position>(){}[0]
    final val preview // io.github.kingg22.deezer.client.api.objects/Track.preview|{}preview[0]
        final fun <get-preview>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Track.preview.<get-preview>|<get-preview>(){}[0]
    final val rank // io.github.kingg22.deezer.client.api.objects/Track.rank|{}rank[0]
        final fun <get-rank>(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Track.rank.<get-rank>|<get-rank>(){}[0]
    final val releaseDate // io.github.kingg22.deezer.client.api.objects/Track.releaseDate|{}releaseDate[0]
        final fun <get-releaseDate>(): kotlinx.datetime/LocalDate? // io.github.kingg22.deezer.client.api.objects/Track.releaseDate.<get-releaseDate>|<get-releaseDate>(){}[0]
    final val share // io.github.kingg22.deezer.client.api.objects/Track.share|{}share[0]
        final fun <get-share>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.share.<get-share>|<get-share>(){}[0]
    final val timeAdd // io.github.kingg22.deezer.client.api.objects/Track.timeAdd|{}timeAdd[0]
        final fun <get-timeAdd>(): kotlin/Long? // io.github.kingg22.deezer.client.api.objects/Track.timeAdd.<get-timeAdd>|<get-timeAdd>(){}[0]
    final val title // io.github.kingg22.deezer.client.api.objects/Track.title|{}title[0]
        final fun <get-title>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Track.title.<get-title>|<get-title>(){}[0]
    final val titleShort // io.github.kingg22.deezer.client.api.objects/Track.titleShort|{}titleShort[0]
        final fun <get-titleShort>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Track.titleShort.<get-titleShort>|<get-titleShort>(){}[0]
    final val titleVersion // io.github.kingg22.deezer.client.api.objects/Track.titleVersion|{}titleVersion[0]
        final fun <get-titleVersion>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.titleVersion.<get-titleVersion>|<get-titleVersion>(){}[0]
    final val trackPosition // io.github.kingg22.deezer.client.api.objects/Track.trackPosition|{}trackPosition[0]
        final fun <get-trackPosition>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/Track.trackPosition.<get-trackPosition>|<get-trackPosition>(){}[0]
    final val trackToken // io.github.kingg22.deezer.client.api.objects/Track.trackToken|{}trackToken[0]
        final fun <get-trackToken>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/Track.trackToken.<get-trackToken>|<get-trackToken>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/Track.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Track.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/Track.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/Track.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/Track.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/Track // io.github.kingg22.deezer.client.api.objects/Track.reload|reload(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/Track> { // io.github.kingg22.deezer.client.api.objects/Track.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/Track.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/Track.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/Track.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/Track // io.github.kingg22.deezer.client.api.objects/Track.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/Track) // io.github.kingg22.deezer.client.api.objects/Track.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.Track){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/Track.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/Track.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/Track> // io.github.kingg22.deezer.client.api.objects/Track.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api.objects/User : io.github.kingg22.deezer.client.api.objects/Resource { // io.github.kingg22.deezer.client.api.objects/User|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlinx.datetime/LocalDate? = ..., kotlinx.datetime/LocalDate? = ..., io.github.kingg22.deezer.client.api.objects/User.Gender? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels>? = ..., kotlin/String? = ..., kotlin/String = ...) // io.github.kingg22.deezer.client.api.objects/User.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlinx.datetime.LocalDate?;kotlinx.datetime.LocalDate?;io.github.kingg22.deezer.client.api.objects.User.Gender?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.collections.List<io.github.kingg22.deezer.client.api.objects.User.ExplicitContentLevels>?;kotlin.String?;kotlin.String){}[0]

    final val birthday // io.github.kingg22.deezer.client.api.objects/User.birthday|{}birthday[0]
        final fun <get-birthday>(): kotlinx.datetime/LocalDate? // io.github.kingg22.deezer.client.api.objects/User.birthday.<get-birthday>|<get-birthday>(){}[0]
    final val country // io.github.kingg22.deezer.client.api.objects/User.country|{}country[0]
        final fun <get-country>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.country.<get-country>|<get-country>(){}[0]
    final val email // io.github.kingg22.deezer.client.api.objects/User.email|{}email[0]
        final fun <get-email>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.email.<get-email>|<get-email>(){}[0]
    final val explicitContentLevel // io.github.kingg22.deezer.client.api.objects/User.explicitContentLevel|{}explicitContentLevel[0]
        final fun <get-explicitContentLevel>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.explicitContentLevel.<get-explicitContentLevel>|<get-explicitContentLevel>(){}[0]
    final val explicitContentLevelsAvailable // io.github.kingg22.deezer.client.api.objects/User.explicitContentLevelsAvailable|{}explicitContentLevelsAvailable[0]
        final fun <get-explicitContentLevelsAvailable>(): kotlin.collections/List<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels>? // io.github.kingg22.deezer.client.api.objects/User.explicitContentLevelsAvailable.<get-explicitContentLevelsAvailable>|<get-explicitContentLevelsAvailable>(){}[0]
    final val firstname // io.github.kingg22.deezer.client.api.objects/User.firstname|{}firstname[0]
        final fun <get-firstname>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.firstname.<get-firstname>|<get-firstname>(){}[0]
    final val gender // io.github.kingg22.deezer.client.api.objects/User.gender|{}gender[0]
        final fun <get-gender>(): io.github.kingg22.deezer.client.api.objects/User.Gender? // io.github.kingg22.deezer.client.api.objects/User.gender.<get-gender>|<get-gender>(){}[0]
    final val id // io.github.kingg22.deezer.client.api.objects/User.id|{}id[0]
        final fun <get-id>(): kotlin/Long // io.github.kingg22.deezer.client.api.objects/User.id.<get-id>|<get-id>(){}[0]
    final val inscriptionDate // io.github.kingg22.deezer.client.api.objects/User.inscriptionDate|{}inscriptionDate[0]
        final fun <get-inscriptionDate>(): kotlinx.datetime/LocalDate? // io.github.kingg22.deezer.client.api.objects/User.inscriptionDate.<get-inscriptionDate>|<get-inscriptionDate>(){}[0]
    final val isKid // io.github.kingg22.deezer.client.api.objects/User.isKid|{}isKid[0]
        final fun <get-isKid>(): kotlin/Boolean? // io.github.kingg22.deezer.client.api.objects/User.isKid.<get-isKid>|<get-isKid>(){}[0]
    final val lang // io.github.kingg22.deezer.client.api.objects/User.lang|{}lang[0]
        final fun <get-lang>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.lang.<get-lang>|<get-lang>(){}[0]
    final val lastname // io.github.kingg22.deezer.client.api.objects/User.lastname|{}lastname[0]
        final fun <get-lastname>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.lastname.<get-lastname>|<get-lastname>(){}[0]
    final val link // io.github.kingg22.deezer.client.api.objects/User.link|{}link[0]
        final fun <get-link>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.link.<get-link>|<get-link>(){}[0]
    final val name // io.github.kingg22.deezer.client.api.objects/User.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/User.name.<get-name>|<get-name>(){}[0]
    final val picture // io.github.kingg22.deezer.client.api.objects/User.picture|{}picture[0]
        final fun <get-picture>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.picture.<get-picture>|<get-picture>(){}[0]
    final val pictureBig // io.github.kingg22.deezer.client.api.objects/User.pictureBig|{}pictureBig[0]
        final fun <get-pictureBig>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.pictureBig.<get-pictureBig>|<get-pictureBig>(){}[0]
    final val pictureMedium // io.github.kingg22.deezer.client.api.objects/User.pictureMedium|{}pictureMedium[0]
        final fun <get-pictureMedium>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.pictureMedium.<get-pictureMedium>|<get-pictureMedium>(){}[0]
    final val pictureSmall // io.github.kingg22.deezer.client.api.objects/User.pictureSmall|{}pictureSmall[0]
        final fun <get-pictureSmall>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.pictureSmall.<get-pictureSmall>|<get-pictureSmall>(){}[0]
    final val pictureXl // io.github.kingg22.deezer.client.api.objects/User.pictureXl|{}pictureXl[0]
        final fun <get-pictureXl>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.pictureXl.<get-pictureXl>|<get-pictureXl>(){}[0]
    final val status // io.github.kingg22.deezer.client.api.objects/User.status|{}status[0]
        final fun <get-status>(): kotlin/Int? // io.github.kingg22.deezer.client.api.objects/User.status.<get-status>|<get-status>(){}[0]
    final val tracklist // io.github.kingg22.deezer.client.api.objects/User.tracklist|{}tracklist[0]
        final fun <get-tracklist>(): kotlin/String? // io.github.kingg22.deezer.client.api.objects/User.tracklist.<get-tracklist>|<get-tracklist>(){}[0]
    final val type // io.github.kingg22.deezer.client.api.objects/User.type|{}type[0]
        final fun <get-type>(): kotlin/String // io.github.kingg22.deezer.client.api.objects/User.type.<get-type>|<get-type>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.api.objects/User.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.api.objects/User.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.api.objects/User.toString|toString(){}[0]
    final suspend fun reload(): io.github.kingg22.deezer.client.api.objects/User // io.github.kingg22.deezer.client.api.objects/User.reload|reload(){}[0]

    final enum class ExplicitContentLevels : kotlin/Enum<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels> { // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels|null[0]
        enum entry EXPLICIT_DISPLAY // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.EXPLICIT_DISPLAY|null[0]
        enum entry EXPLICIT_HIDE // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.EXPLICIT_HIDE|null[0]
        enum entry EXPLICIT_NO_RECOMMENDATION // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.EXPLICIT_NO_RECOMMENDATION|null[0]

        final val entries // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels> // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels> // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.values|values#static(){}[0]

        final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels> // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.Companion.serializer|serializer(){}[0]
            final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.api.objects/User.ExplicitContentLevels.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        }
    }

    final enum class Gender : kotlin/Enum<io.github.kingg22.deezer.client.api.objects/User.Gender> { // io.github.kingg22.deezer.client.api.objects/User.Gender|null[0]
        enum entry FEMALE // io.github.kingg22.deezer.client.api.objects/User.Gender.FEMALE|null[0]
        enum entry MALE // io.github.kingg22.deezer.client.api.objects/User.Gender.MALE|null[0]

        final val entries // io.github.kingg22.deezer.client.api.objects/User.Gender.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.api.objects/User.Gender> // io.github.kingg22.deezer.client.api.objects/User.Gender.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.api.objects/User.Gender // io.github.kingg22.deezer.client.api.objects/User.Gender.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<io.github.kingg22.deezer.client.api.objects/User.Gender> // io.github.kingg22.deezer.client.api.objects/User.Gender.values|values#static(){}[0]

        final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.api.objects/User.Gender.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/User.Gender> // io.github.kingg22.deezer.client.api.objects/User.Gender.Companion.serializer|serializer(){}[0]
            final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.api.objects/User.Gender.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        }
    }

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<io.github.kingg22.deezer.client.api.objects/User> { // io.github.kingg22.deezer.client.api.objects/User.$serializer|null[0]
        final val descriptor // io.github.kingg22.deezer.client.api.objects/User.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // io.github.kingg22.deezer.client.api.objects/User.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // io.github.kingg22.deezer.client.api.objects/User.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): io.github.kingg22.deezer.client.api.objects/User // io.github.kingg22.deezer.client.api.objects/User.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, io.github.kingg22.deezer.client.api.objects/User) // io.github.kingg22.deezer.client.api.objects/User.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;io.github.kingg22.deezer.client.api.objects.User){}[0]
    }

    final object Companion { // io.github.kingg22.deezer.client.api.objects/User.Companion|null[0]
        final val $childSerializers // io.github.kingg22.deezer.client.api.objects/User.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.api.objects/User> // io.github.kingg22.deezer.client.api.objects/User.Companion.serializer|serializer(){}[0]
    }
}

final class io.github.kingg22.deezer.client.api/DeezerApiClient { // io.github.kingg22.deezer.client.api/DeezerApiClient|null[0]
    constructor <init>(io.github.kingg22.deezer.client.utils/HttpClientBuilder = ...) // io.github.kingg22.deezer.client.api/DeezerApiClient.<init>|<init>(io.github.kingg22.deezer.client.utils.HttpClientBuilder){}[0]

    final val albums // io.github.kingg22.deezer.client.api/DeezerApiClient.albums|{}albums[0]
        final fun <get-albums>(): io.github.kingg22.deezer.client.api.routes/AlbumRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.albums.<get-albums>|<get-albums>(){}[0]
    final val artists // io.github.kingg22.deezer.client.api/DeezerApiClient.artists|{}artists[0]
        final fun <get-artists>(): io.github.kingg22.deezer.client.api.routes/ArtistRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.artists.<get-artists>|<get-artists>(){}[0]
    final val charts // io.github.kingg22.deezer.client.api/DeezerApiClient.charts|{}charts[0]
        final fun <get-charts>(): io.github.kingg22.deezer.client.api.routes/ChartRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.charts.<get-charts>|<get-charts>(){}[0]
    final val editorials // io.github.kingg22.deezer.client.api/DeezerApiClient.editorials|{}editorials[0]
        final fun <get-editorials>(): io.github.kingg22.deezer.client.api.routes/EditorialRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.editorials.<get-editorials>|<get-editorials>(){}[0]
    final val episodes // io.github.kingg22.deezer.client.api/DeezerApiClient.episodes|{}episodes[0]
        final fun <get-episodes>(): io.github.kingg22.deezer.client.api.routes/EpisodeRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.episodes.<get-episodes>|<get-episodes>(){}[0]
    final val genres // io.github.kingg22.deezer.client.api/DeezerApiClient.genres|{}genres[0]
        final fun <get-genres>(): io.github.kingg22.deezer.client.api.routes/GenreRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.genres.<get-genres>|<get-genres>(){}[0]
    final val httpClient // io.github.kingg22.deezer.client.api/DeezerApiClient.httpClient|{}httpClient[0]
        final fun <get-httpClient>(): io.ktor.client/HttpClient // io.github.kingg22.deezer.client.api/DeezerApiClient.httpClient.<get-httpClient>|<get-httpClient>(){}[0]
    final val infos // io.github.kingg22.deezer.client.api/DeezerApiClient.infos|{}infos[0]
        final fun <get-infos>(): io.github.kingg22.deezer.client.api.routes/InfosRoute // io.github.kingg22.deezer.client.api/DeezerApiClient.infos.<get-infos>|<get-infos>(){}[0]
    final val options // io.github.kingg22.deezer.client.api/DeezerApiClient.options|{}options[0]
        final fun <get-options>(): io.github.kingg22.deezer.client.api.routes/OptionsRoute // io.github.kingg22.deezer.client.api/DeezerApiClient.options.<get-options>|<get-options>(){}[0]
    final val playlists // io.github.kingg22.deezer.client.api/DeezerApiClient.playlists|{}playlists[0]
        final fun <get-playlists>(): io.github.kingg22.deezer.client.api.routes/PlaylistRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.playlists.<get-playlists>|<get-playlists>(){}[0]
    final val podcasts // io.github.kingg22.deezer.client.api/DeezerApiClient.podcasts|{}podcasts[0]
        final fun <get-podcasts>(): io.github.kingg22.deezer.client.api.routes/PodcastRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.podcasts.<get-podcasts>|<get-podcasts>(){}[0]
    final val radios // io.github.kingg22.deezer.client.api/DeezerApiClient.radios|{}radios[0]
        final fun <get-radios>(): io.github.kingg22.deezer.client.api.routes/RadioRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.radios.<get-radios>|<get-radios>(){}[0]
    final val searches // io.github.kingg22.deezer.client.api/DeezerApiClient.searches|{}searches[0]
        final fun <get-searches>(): io.github.kingg22.deezer.client.api.routes/SearchRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.searches.<get-searches>|<get-searches>(){}[0]
    final val tracks // io.github.kingg22.deezer.client.api/DeezerApiClient.tracks|{}tracks[0]
        final fun <get-tracks>(): io.github.kingg22.deezer.client.api.routes/TrackRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.tracks.<get-tracks>|<get-tracks>(){}[0]
    final val users // io.github.kingg22.deezer.client.api/DeezerApiClient.users|{}users[0]
        final fun <get-users>(): io.github.kingg22.deezer.client.api.routes/UserRoutes // io.github.kingg22.deezer.client.api/DeezerApiClient.users.<get-users>|<get-users>(){}[0]

    final object Companion { // io.github.kingg22.deezer.client.api/DeezerApiClient.Companion|null[0]
        final fun initialize(io.github.kingg22.deezer.client.utils/HttpClientBuilder = ...): io.github.kingg22.deezer.client.api/DeezerApiClient // io.github.kingg22.deezer.client.api/DeezerApiClient.Companion.initialize|initialize(io.github.kingg22.deezer.client.utils.HttpClientBuilder){}[0]
    }
}

final class io.github.kingg22.deezer.client.exceptions/DeezerApiException : io.github.kingg22.deezer.client.exceptions/DeezerClientException { // io.github.kingg22.deezer.client.exceptions/DeezerApiException|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/String? = ..., kotlin/Throwable? = ...) // io.github.kingg22.deezer.client.exceptions/DeezerApiException.<init>|<init>(kotlin.Int?;kotlin.String?;kotlin.Throwable?){}[0]

    final val cause // io.github.kingg22.deezer.client.exceptions/DeezerApiException.cause|{}cause[0]
        final fun <get-cause>(): kotlin/Throwable? // io.github.kingg22.deezer.client.exceptions/DeezerApiException.cause.<get-cause>|<get-cause>(){}[0]
    final val error // io.github.kingg22.deezer.client.exceptions/DeezerApiException.error|{}error[0]
        final fun <get-error>(): io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode? // io.github.kingg22.deezer.client.exceptions/DeezerApiException.error.<get-error>|<get-error>(){}[0]
    final val message // io.github.kingg22.deezer.client.exceptions/DeezerApiException.message|{}message[0]
        final fun <get-message>(): kotlin/String // io.github.kingg22.deezer.client.exceptions/DeezerApiException.message.<get-message>|<get-message>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.exceptions/DeezerApiException.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.exceptions/DeezerApiException.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.exceptions/DeezerApiException.toString|toString(){}[0]

    final enum class DeezerErrorCode : kotlin/Enum<io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode> { // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode|null[0]
        enum entry DATA_NOT_FOUND // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.DATA_NOT_FOUND|null[0]
        enum entry INDIVIDUAL_ACCOUNT_NOT_ALLOWED // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.INDIVIDUAL_ACCOUNT_NOT_ALLOWED|null[0]
        enum entry ITEMS_LIMIT_EXCEEDED // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.ITEMS_LIMIT_EXCEEDED|null[0]
        enum entry PARAMETER // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.PARAMETER|null[0]
        enum entry PARAMETER_MISSING // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.PARAMETER_MISSING|null[0]
        enum entry PERMISSION // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.PERMISSION|null[0]
        enum entry QUERY_INVALID // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.QUERY_INVALID|null[0]
        enum entry QUOTA // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.QUOTA|null[0]
        enum entry SERVICE_BUSY // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.SERVICE_BUSY|null[0]
        enum entry TOKEN_INVALID // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.TOKEN_INVALID|null[0]

        final val code // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.code|{}code[0]
            final fun <get-code>(): kotlin/Int // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.code.<get-code>|<get-code>(){}[0]
        final val description // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.description|{}description[0]
            final fun <get-description>(): kotlin/String // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.description.<get-description>|<get-description>(){}[0]
        final val entries // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode> // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.entries.<get-entries>|<get-entries>#static(){}[0]
        final val type // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.type|{}type[0]
            final fun <get-type>(): kotlin/String? // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.type.<get-type>|<get-type>(){}[0]

        final fun valueOf(kotlin/String): io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode> // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.values|values#static(){}[0]

        final object Companion : kotlinx.serialization.internal/SerializerFactory { // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.Companion|null[0]
            final fun fromCode(kotlin/Int): io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode? // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.Companion.fromCode|fromCode(kotlin.Int){}[0]
            final fun serializer(): kotlinx.serialization/KSerializer<io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode> // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.Companion.serializer|serializer(){}[0]
            final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // io.github.kingg22.deezer.client.exceptions/DeezerApiException.DeezerErrorCode.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        }
    }
}

final class io.github.kingg22.deezer.client.utils/HttpClientBuilder { // io.github.kingg22.deezer.client.utils/HttpClientBuilder|null[0]
    constructor <init>(kotlin/String = ..., io.ktor.client.plugins.cookies/CookiesStorage = ..., kotlin/Long = ..., kotlin/Int = ..., io.ktor.client.engine/HttpClientEngine? = ..., io.ktor.client.plugins.logging/Logger = ..., io.ktor.client.plugins.logging/LogLevel = ...) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.<init>|<init>(kotlin.String;io.ktor.client.plugins.cookies.CookiesStorage;kotlin.Long;kotlin.Int;io.ktor.client.engine.HttpClientEngine?;io.ktor.client.plugins.logging.Logger;io.ktor.client.plugins.logging.LogLevel){}[0]

    final var cookiesStorage // io.github.kingg22.deezer.client.utils/HttpClientBuilder.cookiesStorage|{}cookiesStorage[0]
        final fun <get-cookiesStorage>(): io.ktor.client.plugins.cookies/CookiesStorage // io.github.kingg22.deezer.client.utils/HttpClientBuilder.cookiesStorage.<get-cookiesStorage>|<get-cookiesStorage>(){}[0]
        final fun <set-cookiesStorage>(io.ktor.client.plugins.cookies/CookiesStorage) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.cookiesStorage.<set-cookiesStorage>|<set-cookiesStorage>(io.ktor.client.plugins.cookies.CookiesStorage){}[0]
    final var httpEngine // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpEngine|{}httpEngine[0]
        final fun <get-httpEngine>(): io.ktor.client.engine/HttpClientEngine? // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpEngine.<get-httpEngine>|<get-httpEngine>(){}[0]
        final fun <set-httpEngine>(io.ktor.client.engine/HttpClientEngine?) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpEngine.<set-httpEngine>|<set-httpEngine>(io.ktor.client.engine.HttpClientEngine?){}[0]
    final var httpLogLevel // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpLogLevel|{}httpLogLevel[0]
        final fun <get-httpLogLevel>(): io.ktor.client.plugins.logging/LogLevel // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpLogLevel.<get-httpLogLevel>|<get-httpLogLevel>(){}[0]
        final fun <set-httpLogLevel>(io.ktor.client.plugins.logging/LogLevel) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpLogLevel.<set-httpLogLevel>|<set-httpLogLevel>(io.ktor.client.plugins.logging.LogLevel){}[0]
    final var logger // io.github.kingg22.deezer.client.utils/HttpClientBuilder.logger|{}logger[0]
        final fun <get-logger>(): io.ktor.client.plugins.logging/Logger // io.github.kingg22.deezer.client.utils/HttpClientBuilder.logger.<get-logger>|<get-logger>(){}[0]
        final fun <set-logger>(io.ktor.client.plugins.logging/Logger) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.logger.<set-logger>|<set-logger>(io.ktor.client.plugins.logging.Logger){}[0]
    final var maxRetryCount // io.github.kingg22.deezer.client.utils/HttpClientBuilder.maxRetryCount|{}maxRetryCount[0]
        final fun <get-maxRetryCount>(): kotlin/Int // io.github.kingg22.deezer.client.utils/HttpClientBuilder.maxRetryCount.<get-maxRetryCount>|<get-maxRetryCount>(){}[0]
        final fun <set-maxRetryCount>(kotlin/Int) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.maxRetryCount.<set-maxRetryCount>|<set-maxRetryCount>(kotlin.Int){}[0]
    final var timeout // io.github.kingg22.deezer.client.utils/HttpClientBuilder.timeout|{}timeout[0]
        final fun <get-timeout>(): kotlin/Long // io.github.kingg22.deezer.client.utils/HttpClientBuilder.timeout.<get-timeout>|<get-timeout>(){}[0]
        final fun <set-timeout>(kotlin/Long) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.timeout.<set-timeout>|<set-timeout>(kotlin.Long){}[0]
    final var userAgent // io.github.kingg22.deezer.client.utils/HttpClientBuilder.userAgent|{}userAgent[0]
        final fun <get-userAgent>(): kotlin/String // io.github.kingg22.deezer.client.utils/HttpClientBuilder.userAgent.<get-userAgent>|<get-userAgent>(){}[0]
        final fun <set-userAgent>(kotlin/String) // io.github.kingg22.deezer.client.utils/HttpClientBuilder.userAgent.<set-userAgent>|<set-userAgent>(kotlin.String){}[0]

    final fun addCustomConfig(kotlin/Function1<io.ktor.client/HttpClientConfig<*>, kotlin/Unit>): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.addCustomConfig|addCustomConfig(kotlin.Function1<io.ktor.client.HttpClientConfig<*>,kotlin.Unit>){}[0]
    final fun build(): io.ktor.client/HttpClient // io.github.kingg22.deezer.client.utils/HttpClientBuilder.build|build(){}[0]
    final fun component1(): kotlin/String // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component1|component1(){}[0]
    final fun component2(): io.ktor.client.plugins.cookies/CookiesStorage // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component2|component2(){}[0]
    final fun component3(): kotlin/Long // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component3|component3(){}[0]
    final fun component4(): kotlin/Int // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component4|component4(){}[0]
    final fun component5(): io.ktor.client.engine/HttpClientEngine? // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component5|component5(){}[0]
    final fun component6(): io.ktor.client.plugins.logging/Logger // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component6|component6(){}[0]
    final fun component7(): io.ktor.client.plugins.logging/LogLevel // io.github.kingg22.deezer.client.utils/HttpClientBuilder.component7|component7(){}[0]
    final fun cookiesStorage(io.ktor.client.plugins.cookies/CookiesStorage): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.cookiesStorage|cookiesStorage(io.ktor.client.plugins.cookies.CookiesStorage){}[0]
    final fun copy(kotlin/String = ..., io.ktor.client.plugins.cookies/CookiesStorage = ..., kotlin/Long = ..., kotlin/Int = ..., io.ktor.client.engine/HttpClientEngine? = ..., io.ktor.client.plugins.logging/Logger = ..., io.ktor.client.plugins.logging/LogLevel = ...): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.copy|copy(kotlin.String;io.ktor.client.plugins.cookies.CookiesStorage;kotlin.Long;kotlin.Int;io.ktor.client.engine.HttpClientEngine?;io.ktor.client.plugins.logging.Logger;io.ktor.client.plugins.logging.LogLevel){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.kingg22.deezer.client.utils/HttpClientBuilder.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.kingg22.deezer.client.utils/HttpClientBuilder.hashCode|hashCode(){}[0]
    final fun httpEngine(io.ktor.client.engine/HttpClientEngine): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpEngine|httpEngine(io.ktor.client.engine.HttpClientEngine){}[0]
    final fun httpLogLevel(io.ktor.client.plugins.logging/LogLevel): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.httpLogLevel|httpLogLevel(io.ktor.client.plugins.logging.LogLevel){}[0]
    final fun logger(io.ktor.client.plugins.logging/Logger): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.logger|logger(io.ktor.client.plugins.logging.Logger){}[0]
    final fun maxRetryCount(kotlin/Int): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.maxRetryCount|maxRetryCount(kotlin.Int){}[0]
    final fun timeout(kotlin.time/Duration): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.timeout|timeout(kotlin.time.Duration){}[0]
    final fun timeout(kotlin/Long): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.timeout|timeout(kotlin.Long){}[0]
    final fun toString(): kotlin/String // io.github.kingg22.deezer.client.utils/HttpClientBuilder.toString|toString(){}[0]
    final fun userAgent(kotlin/String): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.userAgent|userAgent(kotlin.String){}[0]

    final object Companion { // io.github.kingg22.deezer.client.utils/HttpClientBuilder.Companion|null[0]
        final fun httpClient(kotlin/Function1<io.github.kingg22.deezer.client.utils/HttpClientBuilder, kotlin/Unit> = ...): io.ktor.client/HttpClient // io.github.kingg22.deezer.client.utils/HttpClientBuilder.Companion.httpClient|httpClient(kotlin.Function1<io.github.kingg22.deezer.client.utils.HttpClientBuilder,kotlin.Unit>){}[0]
        final fun httpClientBuilder(kotlin/Function1<io.github.kingg22.deezer.client.utils/HttpClientBuilder, kotlin/Unit> = ...): io.github.kingg22.deezer.client.utils/HttpClientBuilder // io.github.kingg22.deezer.client.utils/HttpClientBuilder.Companion.httpClientBuilder|httpClientBuilder(kotlin.Function1<io.github.kingg22.deezer.client.utils.HttpClientBuilder,kotlin.Unit>){}[0]
    }
}

open class io.github.kingg22.deezer.client.exceptions/DeezerClientException : kotlin/RuntimeException { // io.github.kingg22.deezer.client.exceptions/DeezerClientException|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Throwable? = ...) // io.github.kingg22.deezer.client.exceptions/DeezerClientException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]

    final val messageString // io.github.kingg22.deezer.client.exceptions/DeezerClientException.messageString|{}messageString[0]
        final fun <get-messageString>(): kotlin/String? // io.github.kingg22.deezer.client.exceptions/DeezerClientException.messageString.<get-messageString>|<get-messageString>(){}[0]
    open val cause // io.github.kingg22.deezer.client.exceptions/DeezerClientException.cause|{}cause[0]
        open fun <get-cause>(): kotlin/Throwable? // io.github.kingg22.deezer.client.exceptions/DeezerClientException.cause.<get-cause>|<get-cause>(){}[0]
    open val message // io.github.kingg22.deezer.client.exceptions/DeezerClientException.message|{}message[0]
        open fun <get-message>(): kotlin/String // io.github.kingg22.deezer.client.exceptions/DeezerClientException.message.<get-message>|<get-message>(){}[0]

    final fun generateLinks(): kotlin/String // io.github.kingg22.deezer.client.exceptions/DeezerClientException.generateLinks|generateLinks(){}[0]
}

final object io.github.kingg22.deezer.client.api/GlobalDeezerApiClient : io.github.kingg22.deezer.client.utils/LateInitClient { // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient|null[0]
    final var instance // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.instance|{}instance[0]
        final fun <get-instance>(): io.github.kingg22.deezer.client.api/DeezerApiClient? // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.instance.<get-instance>|<get-instance>(){}[0]
        final fun <set-instance>(io.github.kingg22.deezer.client.api/DeezerApiClient?) // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.instance.<set-instance>|<set-instance>(io.github.kingg22.deezer.client.api.DeezerApiClient?){}[0]

    final fun initIfNeeded(io.github.kingg22.deezer.client.api/DeezerApiClient) // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.initIfNeeded|initIfNeeded(io.github.kingg22.deezer.client.api.DeezerApiClient){}[0]
    final fun isInitialized(): kotlin/Boolean // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.isInitialized|isInitialized(){}[0]
    final fun requireInstance(): io.github.kingg22.deezer.client.api/DeezerApiClient // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.requireInstance|requireInstance(){}[0]
    final fun reset() // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.reset|reset(){}[0]
    final fun resetIf(kotlin/Boolean) // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.resetIf|resetIf(kotlin.Boolean){}[0]
    final fun resetIf(kotlin/Function0<kotlin/Boolean>) // io.github.kingg22.deezer.client.api/GlobalDeezerApiClient.resetIf|resetIf(kotlin.Function0<kotlin.Boolean>){}[0]
}

final fun (io.github.kingg22.deezer.client.api.objects/Album).io.github.kingg22.deezer.client.api.objects/retrieveImageUrl(): kotlin/String // io.github.kingg22.deezer.client.api.objects/retrieveImageUrl|retrieveImageUrl@io.github.kingg22.deezer.client.api.objects.Album(){}[0]
final fun (io.github.kingg22.deezer.client.api.objects/Playlist).io.github.kingg22.deezer.client.api.objects/retrieveImageUrl(): kotlin/String // io.github.kingg22.deezer.client.api.objects/retrieveImageUrl|retrieveImageUrl@io.github.kingg22.deezer.client.api.objects.Playlist(){}[0]
final fun (io.github.kingg22.deezer.client.api.objects/Radio).io.github.kingg22.deezer.client.api.objects/retrieveImageUrl(): kotlin/String // io.github.kingg22.deezer.client.api.objects/retrieveImageUrl|retrieveImageUrl@io.github.kingg22.deezer.client.api.objects.Radio(){}[0]
final fun (io.github.kingg22.deezer.client.api.objects/Track).io.github.kingg22.deezer.client.api.objects/retrieveImageUrl(): kotlin/String // io.github.kingg22.deezer.client.api.objects/retrieveImageUrl|retrieveImageUrl@io.github.kingg22.deezer.client.api.objects.Track(){}[0]
final fun (io.ktor.http/URLBuilder).io.github.kingg22.deezer.client.api.objects/withImageSize(io.github.kingg22.deezer.client.api.objects/ImageSizes) // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@io.ktor.http.URLBuilder(io.github.kingg22.deezer.client.api.objects.ImageSizes){}[0]
final fun (io.ktor.http/URLBuilder).io.github.kingg22.deezer.client.api.objects/withImageSize(kotlin/Int) // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@io.ktor.http.URLBuilder(kotlin.Int){}[0]
final fun (io.ktor.http/Url).io.github.kingg22.deezer.client.api.objects/withImageSize(io.github.kingg22.deezer.client.api.objects/ImageSizes): io.ktor.http/Url // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@io.ktor.http.Url(io.github.kingg22.deezer.client.api.objects.ImageSizes){}[0]
final fun (io.ktor.http/Url).io.github.kingg22.deezer.client.api.objects/withImageSize(kotlin/Int): io.ktor.http/Url // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@io.ktor.http.Url(kotlin.Int){}[0]
final fun (kotlin/String).io.github.kingg22.deezer.client.api.objects/withImageSize(io.github.kingg22.deezer.client.api.objects/ImageSizes): kotlin/String // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@kotlin.String(io.github.kingg22.deezer.client.api.objects.ImageSizes){}[0]
final fun (kotlin/String).io.github.kingg22.deezer.client.api.objects/withImageSize(kotlin/Int): kotlin/String // io.github.kingg22.deezer.client.api.objects/withImageSize|withImageSize@kotlin.String(kotlin.Int){}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A>).io.github.kingg22.deezer.client.api.objects/fetchNext(kotlin/Boolean = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A>? // io.github.kingg22.deezer.client.api.objects/fetchNext|fetchNext@io.github.kingg22.deezer.client.api.objects.PaginatedResponse<0:0>(kotlin.Boolean){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A>).io.github.kingg22.deezer.client.api.objects/fetchPrevious(kotlin/Boolean = ...): io.github.kingg22.deezer.client.api.objects/PaginatedResponse<#A>? // io.github.kingg22.deezer.client.api.objects/fetchPrevious|fetchPrevious@io.github.kingg22.deezer.client.api.objects.PaginatedResponse<0:0>(kotlin.Boolean){0§<kotlin.Any>}[0]
